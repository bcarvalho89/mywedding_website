/* Buttons */
.btn {
	background-color: transparent;
	border: none;
	border-radius: $border-radius;
	color: #fff;
	text-transform: uppercase;
	font-size: 14px;
	padding: 8px 20px;
	display: inline-block;

	transition: opacity .3s ease-in-out;
	&.tiffanny {
		@extend .bg-tiffanny;
	}
	&.pink {
		@extend .bg-pink;
	}
	&.disabled {
		opacity: 0.5;
		cursor: not-allowed;
	}
	&:hover {
		opacity: 0.75;
	}
}

.to-top {
	position: fixed;
	bottom: 60px;
	right: 20px;
	color: #fff;
	background-color: $tiffanny;
	border-radius: $border-radius;
	cursor: pointer;
	z-index: 10;
	opacity: 0;
	padding: 15px 16.5px;
	box-shadow: 0px 3px 9px rgba($text,0.3);

	transition: 300ms ease-in-out;
	&:hover {
		background-color: darken($tiffanny,15%);
	}
	&.show {
		opacity: 1;
		transition: 300ms ease-in-out;
	}
}


/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */
 .hamburger {
 	padding: 15px 15px;
 	position: fixed;
 	top: 0;
 	right: 0;
 	z-index: 1;
	background-color: $pink;
	border-radius: $border-radius;
 	display: inline-block;
 	cursor: pointer;
 	transition-property: opacity, filter;
 	transition-duration: 0.15s;
 	transition-timing-function: linear;
 	font: inherit;
 	color: inherit;
 	text-transform: none;
 	border: 0;
 	margin: 0;
 	overflow: visible; 
 }
 .hamburger:hover {
 	opacity: 0.7; 
 }

 .hamburger-box {
 	width: 40px;
 	height: 24px;
 	display: inline-block;
 	position: relative; 
 }

 .hamburger-inner {
 	display: block;
 	top: 50%;
 	margin-top: -2px; 
 }
 .hamburger-inner, .hamburger-inner::before, .hamburger-inner::after {
 	width: 40px;
 	height: 4px;
 	background-color: #fff;
 	border-radius: 4px;
 	position: absolute;
 	transition-property: transform;
 	transition-duration: 0.15s;
 	transition-timing-function: ease; 
 }
 .hamburger-inner::before, .hamburger-inner::after {
 	content: "";
 	display: block; 
 }
 .hamburger-inner::before {
 	top: -10px; 
 }
 .hamburger-inner::after {
 	bottom: -10px; 
 }
/*
 * Spring
 */
 .hamburger--spring .hamburger-inner {
 	top: 2px;
 	transition: background-color 0s 0.15s linear; 
 }
 .hamburger--spring .hamburger-inner::before {
 	top: 10px;
 	transition: top 0.12s 0.3s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19);
 }
 	.hamburger--spring .hamburger-inner::after {
 		top: 20px;
 		transition: top 0.3s 0.3s cubic-bezier(0.33333, 0.66667, 0.66667, 1), transform 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19);
 }

 		.hamburger--spring.is-active .hamburger-inner {
 			transition-delay: 0.32s;
 			background-color: transparent; 
 		}
 		.hamburger--spring.is-active .hamburger-inner::before {
 			top: 0;
 			transition: top 0.12s 0.18s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.15s 0.32s cubic-bezier(0.215, 0.61, 0.355, 1);
 			transform: translate3d(0, 10px, 0) rotate(45deg); 
 		}
 		.hamburger--spring.is-active .hamburger-inner::after {
 			top: 0;
 			transition: top 0.3s cubic-bezier(0.33333, 0, 0.66667, 0.33333), transform 0.15s 0.32s cubic-bezier(0.215, 0.61, 0.355, 1);
 			transform: translate3d(0, 10px, 0) rotate(-45deg); 
 		}